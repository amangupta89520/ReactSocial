[{"D:\\AMAN\\EDUCATION\\courses\\React\\react-social\\src\\index.js":"1","D:\\AMAN\\EDUCATION\\courses\\React\\react-social\\src\\App.js":"2","D:\\AMAN\\EDUCATION\\courses\\React\\react-social\\src\\reportWebVitals.js":"3","D:\\AMAN\\EDUCATION\\courses\\React\\react-social\\src\\Home.js":"4","D:\\AMAN\\EDUCATION\\courses\\React\\react-social\\src\\SignInBtn.js":"5","D:\\AMAN\\EDUCATION\\courses\\React\\react-social\\src\\Navbar.js":"6","D:\\AMAN\\EDUCATION\\courses\\React\\react-social\\src\\CreatePost.js":"7","D:\\AMAN\\EDUCATION\\courses\\React\\react-social\\src\\services\\auth.js":"8","D:\\AMAN\\EDUCATION\\courses\\React\\react-social\\src\\firebase.js":"9","D:\\AMAN\\EDUCATION\\courses\\React\\react-social\\src\\contexts\\user.js":"10","D:\\AMAN\\EDUCATION\\courses\\React\\react-social\\src\\functions.js":"11","D:\\AMAN\\EDUCATION\\courses\\React\\react-social\\src\\feed.js":"12","D:\\AMAN\\EDUCATION\\courses\\React\\react-social\\src\\post.js":"13","D:\\AMAN\\EDUCATION\\courses\\React\\react-social\\src\\comment.js":"14","D:\\AMAN\\EDUCATION\\courses\\React\\react-social\\src\\comment-input.js":"15"},{"size":500,"mtime":499162500000,"results":"16","hashOfConfig":"17"},{"size":329,"mtime":1611882777128,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":292,"mtime":1612313738842,"results":"20","hashOfConfig":"17"},{"size":555,"mtime":1611967185812,"results":"21","hashOfConfig":"17"},{"size":428,"mtime":1611967453317,"results":"22","hashOfConfig":"17"},{"size":3854,"mtime":1612484533441,"results":"23","hashOfConfig":"17"},{"size":669,"mtime":1611881243532,"results":"24","hashOfConfig":"17"},{"size":713,"mtime":1611880710844,"results":"25","hashOfConfig":"17"},{"size":560,"mtime":1611882679274,"results":"26","hashOfConfig":"17"},{"size":365,"mtime":1612227803723,"results":"27","hashOfConfig":"17"},{"size":980,"mtime":1612486584507,"results":"28","hashOfConfig":"17"},{"size":1965,"mtime":1612486777684,"results":"29","hashOfConfig":"17"},{"size":251,"mtime":1612398850145,"results":"30","hashOfConfig":"17"},{"size":1348,"mtime":1612486467144,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"mdkxnm",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},"D:\\AMAN\\EDUCATION\\courses\\React\\react-social\\src\\index.js",[],["67","68"],"D:\\AMAN\\EDUCATION\\courses\\React\\react-social\\src\\App.js",[],"D:\\AMAN\\EDUCATION\\courses\\React\\react-social\\src\\reportWebVitals.js",[],"D:\\AMAN\\EDUCATION\\courses\\React\\react-social\\src\\Home.js",[],"D:\\AMAN\\EDUCATION\\courses\\React\\react-social\\src\\SignInBtn.js",[],"D:\\AMAN\\EDUCATION\\courses\\React\\react-social\\src\\Navbar.js",["69"],"import { useContext } from \"react\";\r\nimport { UserContext } from \"./contexts/user\";\r\nimport SignInBtn from \"./SignInBtn\"\r\n\r\nconst Navbar = () => {\r\n\r\n    const [user,] = useContext(UserContext).user;\r\n\r\n    return (\r\n        <div className=\"navbar\">\r\n            <p>ReactSocial</p>\r\n            {user ? <img className=\"navbar_img\" src={user.photoURL}></img> : <SignInBtn />}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Navbar;","D:\\AMAN\\EDUCATION\\courses\\React\\react-social\\src\\CreatePost.js",["70"],"import { useContext, useState } from \"react\";\r\nimport { UserContext } from \"./contexts/user\";\r\nimport SignInBtn from \"./SignInBtn\"\r\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\r\nimport { db, storage } from \"./firebase\";\r\nimport makeid from \"./functions\";\r\nimport firebase from \"firebase\";\r\n\r\nconst CreatePost = () => {\r\n\r\n    const [user,] = useContext(UserContext).user;\r\n    const [caption, setCaption] = useState('');\r\n    const [image, setImage] = useState(null);\r\n    const [progress, setProgress] = useState(0);\r\n\r\n    const handleChange = (e) => {\r\n        if(e.target.files[0]){\r\n            setImage(e.target.files[0]);\r\n\r\n            var selectedImageSrc = URL.createObjectURL(e.target.files[0]);\r\n            var imagePreview = document.getElementById('image-preview');\r\n            imagePreview.src = selectedImageSrc;\r\n            imagePreview.style.display = \"block\";\r\n        }\r\n    }\r\n\r\n    const handleUpload = () => {\r\n        if(image) {\r\n            var imageName = makeid(10);\r\n            const uploadTask = storage.ref(`images/${imageName}.jpg`)\r\n                .put(image);\r\n            \r\n            uploadTask.on(\"state_changed\", (snapshot) => {\r\n                // progress funtion 1% 2%...\r\n                const progress = Math.round((snapshot.bytesTransferred/snapshot.totalBytes)*100);\r\n                setProgress(progress);\r\n            }, (error) => {\r\n                console.log(error);\r\n            }, () => {\r\n                //get download url and upload the post infor\r\n                storage.ref(\"images\").child(`${imageName}.jpg`).getDownloadURL()\r\n                    .then((imageUrl) => {\r\n                        // console.log(imageUrl);\r\n                        db.collection(\"posts\").add({\r\n                            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                            caption: caption,\r\n                            photoUrl: imageUrl,\r\n                            username: user.email.replace(\"@gmail.com\",\"\"),\r\n                            profileUrl: user.photoURL\r\n                        })\r\n                    })\r\n\r\n                    setCaption(\"\");\r\n                    setProgress(0);\r\n                    setImage(null);\r\n\r\n                    document.getElementById(\"image-preview\").style.display = \"none\";\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"createPost\">\r\n\r\n            { user ? (\r\n            <div className=\"createPost_loggedIn\">\r\n                <p>Create Post</p>\r\n                <div className=\"createPost_loggedInCenter\">\r\n                    <textarea className=\"createPost_textarea\" rows=\"3\" value={ caption } onChange={(e) => setCaption(e.target.value)} placeholder=\"Enter caption here..\"></textarea>\r\n                    <div className=\"createPost_imagePreview\">\r\n                        <img id=\"image-preview\" alt=\"\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"createPost_loggedInBottom\">\r\n                    <div className=\"createPost_imageUpload\">\r\n                        <label htmlFor=\"fileInput\">\r\n                        <AddAPhotoIcon style={{cursor:\"pointer\", fontSize: \"20px\"}} />\r\n                        </label>\r\n                        <input id=\"fileInput\" type=\"file\" accept=\"image/*\" onChange={ handleChange }/>    \r\n                    </div>\r\n                    <button className=\"createPost_uploadBtn\" onClick={ handleUpload } style={{color: caption? \"#000\":\"lightgrey\"}}>{`Upload ${progress !=0 ? progress : \"\"}`}</button>\r\n                </div>\r\n            </div>\r\n            ) : (\r\n            <div>\r\n                <SignInBtn/>\r\n                <p style={{ marginLeft: \"12px\" }}>to Post & Comment</p> \r\n            </div>\r\n            )} \r\n            \r\n        </div>\r\n    );\r\n}\r\n \r\nexport default CreatePost;","D:\\AMAN\\EDUCATION\\courses\\React\\react-social\\src\\services\\auth.js",[],"D:\\AMAN\\EDUCATION\\courses\\React\\react-social\\src\\firebase.js",[],"D:\\AMAN\\EDUCATION\\courses\\React\\react-social\\src\\contexts\\user.js",[],"D:\\AMAN\\EDUCATION\\courses\\React\\react-social\\src\\functions.js",[],"D:\\AMAN\\EDUCATION\\courses\\React\\react-social\\src\\feed.js",[],"D:\\AMAN\\EDUCATION\\courses\\React\\react-social\\src\\post.js",["71","72","73"],"import { useContext } from \"react\";\r\nimport Comment from \"./comment\";\r\nimport CommentInput from \"./comment-input\";\r\nimport { UserContext } from \"./contexts/user\";\r\nimport { db, storage } from \"./firebase\";\r\n\r\nconst Post = ({profileUrl, username, id, photoURL, caption, comments}) => {\r\n\r\nconst [user, setUser] = useContext(UserContext).user;\r\n\r\nconst deletePost = () => {\r\n    //delete the image from firebase storage\r\n\r\n    //get ref to the img file we like to delete\r\n    var imageRef = storage.refFromURL(photoURL);\r\n\r\n    //delete the file\r\n    imageRef.delete()\r\n            .then(() => {\r\n                console.log(\"delete successful\")\r\n            }).catch(err => console.log(err))\r\n\r\n    //delte the post info from firebase filestore\r\n    db.collection(\"posts\").doc(id).delete()\r\n                                .then(() => {\r\n                                    console.log(\"delete post info successful\")\r\n                                }).catch(err => console.log(err))\r\n} \r\n\r\n    return (\r\n        <div className=\"post\">\r\n            <div className=\"post_header\">\r\n                <div className=\"post_headerLeft\">\r\n                    <img className=\"post_profilePic\" src={profileUrl} />\r\n                    <p style={{marginLeft: \"8px\"}}>{username}</p>\r\n                </div>\r\n                <button className=\"post_delete\" onClick={deletePost}>Delete</button>\r\n            </div>\r\n\r\n            <div className=\"post_center\">\r\n                <img src={photoURL} className=\"post_photoUrl\" />\r\n            </div>\r\n\r\n            <div>\r\n                <p><span style={{fontWeight: \"500\", marginRight: \"8px\"}}>{ username }</span>{ caption }</p>\r\n            </div>\r\n\r\n            \r\n\r\n            {comments ? comments.map(comment => <Comment username={comment.username} caption={comment.comment}/>) : <></>}\r\n\r\n            \r\n            {user ? <CommentInput id={id} comments={comments} /> : <></>}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Post;","D:\\AMAN\\EDUCATION\\courses\\React\\react-social\\src\\comment.js",[],"D:\\AMAN\\EDUCATION\\courses\\React\\react-social\\src\\comment-input.js",["74","75","76"],"import { useContext, useState } from \"react\";\r\nimport { UserContext } from \"./contexts/user\";\r\nimport { db } from \"./firebase\";\r\n\r\nconst CommentInput = ({ comments, id }) => {\r\n\r\n    const [user, setUser] = useContext(UserContext).user;\r\n\r\n    const [comment, setComment] = useState(\"\");\r\n\r\n    const [commentArray, setCommentArray] = useState(comments ? comments : []);\r\n\r\n    const addComment = () => {\r\n        //Add comment to the post info\r\n        if(comment != \"\"){\r\n            commentArray.push({\r\n                comment: comment,\r\n                username: user.email.replace(\"@gmail.com\", \"\").toLowerCase(),\r\n            });\r\n\r\n            db.collection(\"posts\").doc(id).update({comments: commentArray})\r\n                            .then(() => {\r\n                                setComment(\"\");\r\n                                console.log(\"comment added\");\r\n                            }).catch(err => console.log(err));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"commentInput\">\r\n            <textarea className=\"commentInput_textarea\" rows=\"1\" placeholder=\"write a comment..\" \r\n                      onChange={(e) => setComment(e.target.value)} value={comment}></textarea>\r\n            <button className=\"commentInput_btn\" onClick={addComment}>Post</button>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default CommentInput;",{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":12,"column":21,"nodeType":"83","endLine":12,"endColumn":69},{"ruleId":"84","severity":1,"message":"85","line":82,"column":152,"nodeType":"86","messageId":"87","endLine":82,"endColumn":154},{"ruleId":"88","severity":1,"message":"89","line":9,"column":14,"nodeType":"90","messageId":"91","endLine":9,"endColumn":21},{"ruleId":"81","severity":1,"message":"82","line":34,"column":21,"nodeType":"83","endLine":34,"endColumn":73},{"ruleId":"81","severity":1,"message":"82","line":41,"column":17,"nodeType":"83","endLine":41,"endColumn":65},{"ruleId":"88","severity":1,"message":"89","line":7,"column":18,"nodeType":"90","messageId":"91","endLine":7,"endColumn":25},{"ruleId":"88","severity":1,"message":"92","line":11,"column":26,"nodeType":"90","messageId":"91","endLine":11,"endColumn":41},{"ruleId":"84","severity":1,"message":"85","line":15,"column":20,"nodeType":"86","messageId":"87","endLine":15,"endColumn":22},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'setUser' is assigned a value but never used.","Identifier","unusedVar","'setCommentArray' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]